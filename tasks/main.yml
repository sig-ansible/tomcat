---
- include_tasks: preinstall.yml

- name: Create Tomcat group
  group:
    name: "{{ tomcat_group }}"
    gid: "{{ tomcat_gid|default(omit) }}"

- name: Create Tomcat user
  user:
    name: "{{ tomcat_user }}"
    uid: "{{ tomcat_uid|default(omit) }}"
    group: "{{ tomcat_group }}"
    shell: "{{ tomcat_user_shell }}"

- name: Create tomcat base directory
  file:
    path: "{{ tomcat_base }}"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: "0755"

- name: Check for deployment
  stat: path="{{ tomcat_root }}/{{ tomcat_creates }}"
  register: res

- include_tasks: zip_install.yml
  when: not res.stat.exists

- name: Create service symlink
  file:
    src: "{{ tomcat_root }}"
    dest: "{{ tomcat_root_symlink }}"
    state: link

- name: Find Tomcat scripts
  find: paths="{{ tomcat_root }}/bin" patterns="*.sh"
  register: tomcat_bin_res

- name: Make Tomcat scripts executable
  file:
    path: "{{ item.path }}"
    mode: "0755"
  with_items: "{{ tomcat_bin_res.files }}"

- name: Configure Tomcat environment
  template:
    src: setenv.sh
    dest: "{{ tomcat_root }}/bin"
    mode: "0755"

- name: Set permissions for Tomcat directories
  file:
    path: "{{ tomcat_root }}/{{ item }}"
    state: directory
    owner: "{{ tomcat_user }}"
    mode: "0755"
  with_items:
    - logs
    - conf
    - webapps
    - temp
    - work

- include_tasks: self_signed.yml
  when: tomcat_self_signed

- include_tasks: server_xml.yml
  when: tomcat_manage_server_xml
  tags: tomcat_conf

- include_tasks: context_xml.yml
  when: tomcat_manage_context_xml
  tags: tomcat_conf

- include_tasks: tomcat_users_xml.yml
  when: tomcat_manage_tomcat_users_xml
  tags: tomcat_conf

- include_tasks: logging.yml
  when: tomcat_manage_logging
  tags: tomcat_conf

- name: Add jars to Tomcat
  copy:
    src: "{{ item }}"
    dest: "{{ tomcat_root }}/lib/"
    remote_src: yes
  with_items: "{{ tomcat_add_jars }}"

# - name: Create Upstart Service
#   template:
#     src: tomcat_upstart.conf
#     dest: /etc/init/{{ tomcat_service_name }}.conf
#   when: ansible_service_mgr == 'upstart'

- name: Create Systemd Service
  template:
    src: tomcat_systemd.conf
    dest: /etc/systemd/system/{{ tomcat_service_name }}.service
  when: ansible_service_mgr == 'systemd'
  notify: reload systemd

- name: Add Tomcat about info
  template:
    src: about.j2
    dest: "{{ about_root }}/tomcat{{ tomcat_service_name }}.txt"
  when: about_enabled | default(False)
