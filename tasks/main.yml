---
- include_tasks: guards.yml
  tags: always

- include_tasks: preinstall.yml
  tags: always

- name: Create Tomcat group
  group:
    name: "{{ tomcat_group }}"
    gid: "{{ tomcat_gid|default(omit) }}"

- name: Create Tomcat user
  user:
    name: "{{ tomcat_user }}"
    uid: "{{ tomcat_uid|default(omit) }}"
    group: "{{ tomcat_group }}"
    shell: "{{ tomcat_user_shell }}"

- name: Create tomcat base directory
  file:
    path: "{{ tomcat_base }}"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: "0755"

- name: Check for deployment
  stat: path="{{ tomcat_root }}/{{ tomcat_creates }}"
  register: res
  tags: always

- name: Install from zip
  include_tasks: zip_install.yml
  when: not res.stat.exists
  tags: always

- name: Check webapps directory
  stat:
    path: "{{ tomcat_root  }}/webapps"
  register: res
  tags: always

- name: Migrate webapps directory to managed path
  block:
    - name: Copy directory to managed path
      command: "mv -T '{{ tomcat_root  }}/webapps' '{{ tomcat_webapps_dir }}/'"
  rescue:
    - name: Error migrating tomcat webapps directory
      fail:
        msg: |
          If you're seeing this message it means:

            - tomcat_manage_webapps == true (default: false)
            - tomcat_migrate_to_managed_webapps == true (default: false)
            - {{ res.stat.path }} is a directory and is not a symlink

          If the above are true, the tomcat role will attempt to "migrate" the webapps
          directory to its "managed" location via recursively copy. This message is
          displayed if the copy fails.

            Pre-managed Path: {{ res.stat.path }}
                Managed Path: {{ tomcat_webapps_dir }}
  when: tomcat_manage_webapps and tomcat_migrate_to_managed_webapps and res.stat.exists and res.stat.isdir

- name: Create managed webapps directory
  file:
    path: "{{ tomcat_webapps_dir }}"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: "0755"
  when: tomcat_manage_webapps

- name: Create webapps symlink
  file:
    src: "{{ tomcat_webapps_dir }}"
    dest: "{{ tomcat_root }}/webapps"
    state: link
  when: tomcat_manage_webapps

- name: Create service symlink
  file:
    src: "{{ tomcat_root }}"
    dest: "{{ tomcat_root_symlink }}"
    state: link
    mode: '0700'

- name: Find Tomcat scripts
  find: paths="{{ tomcat_root }}/bin" patterns="*.sh"
  register: tomcat_bin_res

- name: Make Tomcat scripts executable
  file:
    path: "{{ item.path }}"
    mode: "0755"
  with_items: "{{ tomcat_bin_res.files }}"

- name: Configure Tomcat environment
  template:
    src: setenv.sh
    dest: "{{ tomcat_root }}/bin/setenv.sh"
    mode: "0755"
  tags: tomcat_conf

- name: Set permissions for Tomcat directory
  file:
    path: "{{ tomcat_root }}"
    state: directory
    owner: "root"
    group: tomcat
    mode: "0755"

- name: Set permissions for Tomcat directories
  file:
    path: "{{ tomcat_root }}/{{ item }}"
    state: directory
    owner: "{{ tomcat_user }}"
    mode: "0755"
  with_items:
    - logs
    - conf
    - webapps
    - temp
    - work

- include_tasks: self_signed.yml
  when: tomcat_self_signed
  tags: always

- include_tasks: ca_signed.yml
  when: tomcat_ca_signed
  tags: always

- include_tasks: server_xml.yml
  when: tomcat_manage_server_xml
  tags: always

- include_tasks: context_xml.yml
  when: tomcat_manage_context_xml
  tags: always

- include_tasks: tomcat_users_xml.yml
  when: tomcat_manage_tomcat_users_xml
  tags: always

- include_tasks: logging.yml
  when: tomcat_manage_logging
  tags: always

- name: Add jars to Tomcat
  copy:
    src: "{{ item }}"
    dest: "{{ tomcat_root }}/lib/"
    remote_src: yes
  with_items: "{{ tomcat_add_jars }}"

- name: Download jars to Tomcat
  get_url:
    url: "{{ item.url }}"
    dest: "{{ tomcat_root }}/lib/{{ item.filename | default(item.url | basename) }}"
    mode: "0644"
    checksum: "{{ item.checksum }}"
  loop: "{{ tomcat_download_jars }}"
  when: tomcat_download_jars is defined

# - name: Create Upstart Service
#   template:
#     src: tomcat_upstart.conf
#     dest: /etc/init/{{ tomcat_service_name }}.conf
#   when: ansible_service_mgr == 'upstart'

- name: Create Systemd Service
  template:
    src: tomcat_systemd.conf
    dest: /etc/systemd/system/{{ tomcat_service_name }}.service
  when: ansible_service_mgr | default(None) == 'systemd'
  notify: reload systemd
  tags: systemd

- name: Add Tomcat about info
  template:
    src: about.j2
    dest: "{{ about_root }}/tomcat{{ tomcat_service_name }}.txt"
  when: about_enabled | default(False)
